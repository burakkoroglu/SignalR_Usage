@{
    ViewData["Title"] = "Home Page";
}

@section Scripts{
    <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="~/lib/microsoft/signalr/dist/browser/signalr.min.js"></script>
    <script type="text/javascript" >
        $(document).ready(() => {
            var connection = new signalR.HubConnectionBuilder().configureLogging
            (signalR.LogLevel.Information).withAutomaticReconnect([1000,1000,1000]).withUrl("https://localhost:5001/MyHub").build();
            
            start();
            statusShow();
            
            //functions
            function statusShow() {
                $('#conStatus').text(connection.state);
            }

            function start() {
                connection.start().then(() =>{
                statusShow();
                $("#loading").hide();
                $("#connected").show();
                //connection.invoke("GetNames");
                connection.invoke("GetNamesByGroup");

                }).catch((err) =>{
                    console.log(err);
                    setTimeout(() => start() ,2000)
                    $("#connected").hide();
                });
            }

            statusShow();

            connection.onreconnecting( err => {
                $("#loading").show();
                $("#connected").hide();
                statusShow();
                console.log("Hata(Onreconnection) : " + err);
            })

            connection.onreconnected(connectionId => {
               $("#loading").hide();
               $("#connected").show();
               statusShow();
               console.log("connectionId :" + connectionId);
            })

            connection.onclose(() => {
               $("#loading").hide();
               statusShow();
               start();
            })

            connection.on("ReceiveClientCount" , (clientCount) => {
                $("#conCount").text(clientCount);
            })

            connection.on("Notify" ,(countText) => {
                Swal.fire({
                  title: countText,
                  showClass: {
                    popup: 'animate__animated animate__fadeInDown'
                  },
                  hideClass: {
                    popup: 'animate__animated animate__fadeOutUp'
                  }
                })
            })

            connection.on("Error" , (errorText) => {
                Swal.fire({
                  title: errorText,
                  showClass: {
                    popup: 'animate__animated animate__fadeInDown'
                  },
                  hideClass: {
                    popup: 'animate__animated animate__fadeOutUp'
                  }
                })
            })

            connection.on("ReceiveNames" , (names) => {
                $("#namesList").empty();
                names.forEach((item , index) => {
                    $("#namesList").append(`<li class="list-group-item"> ${item} </li> `);
                })
            })

            connection.on("ReceiveMessage", (name) => {
                $("#namesList").append(`<li class="list-group-item"> ${name} </li> `)
                console.log(name)
            })
            
            connection.on("ReceiveMessageByGroup", (name , teamId) => {
                let listName = ""
                console.log("teamID : " +String(teamId));
                if(teamId == 1)
                    listName = "ATeamList";
                if(teamId == 2)
                    listName = "BTeamList";
                
                $(`#${listName}`).append(`<li class="list-group-item">${name} </li>`)
                 
            })

            connection.on("ReceiveNamesByGroup" , (teams) => {
                console.log(teams);
                teams.forEach((team , index) => {

                    let listName = "";
                    if(team.teamId == 1)
                        listName = "ATeamList";
                    if(team.teamId == 2)
                        listName = "BTeamList";
                    team.users.forEach( (user , index2) => {
            
                        $(`#${listName}`).append(`<li class="list-group-item">${user.name} </li>`)
                    });
                });
            });

            connection.on("ReceiveProduct" , (product) => {
                console.log(product);
            });


            //Clicks
            $("#btnNameSave").click(() => {
                connection.invoke("SendName" , $("#txtName").val()).catch((err) =>{console.log(err) });
            })

            $("#btnNameTeam").click(() => {
                let name = $("#txtName").val();
                let teamName = $('input[type=radio]:checked').val();
                if(teamName == null){
                    Swal.fire({
                  title: "Lütfen Takım seçiniz.",
                  showClass: {
                    popup: 'animate__animated animate__fadeInDown'
                  },
                  hideClass: {
                    popup: 'animate__animated animate__fadeOutUp'
                  }
                })
                }
        
                connection.invoke("SendNameByGroup" ,name ,teamName).then(console.log(name + teamName)).catch((err) => {
                    console.log(err);
                });
            })

            $('input[type=radio]').change( () => {
                let value = $(`input[type=radio]:checked`).val();
                console.log("value : " +value);
                if (value == "Team A"){
                    connection.invoke("AddToGroup", value);
                    connection.invoke("RemoveToGroup", "Team B");
                }
                else {
                    connection.invoke("AddToGroup", value);
                    connection.invoke("RemoveToGroup", "Team A");
                }
             })

            $('#btnProduct').click(() => {
                let product = { "id" : 1 , "Name":"Kalem" , "Price" :100 , "Stock" : 200};
                connection.invoke("SendProduct" , product);
            })
                
           
        })
        




    </script>


}
<div class = "row"> 
    <div class="col-md-8 offset-2">
        <input class="form-control" type="text" id ="txtName"/>
        <hr />
        <button class="btn btn-dark" id="btnNameSave" style = "margin-bottom : 5px;">İsim Kaydet</button>
        <button class="btn btn-warning" id="btnNameTeam" style = "margin-bottom : 5px;"> İsim Kaydet(Takım)</button>
        <button class="btn btn-danger" id="btnProduct"> Ürün Gönder</button> 
        <div class = "alert alert-info">
            <div class ="float-left">
                Bağlantı Durumu : <strong id="conStatus"></strong>
                , Client Sayısı :<strong id="conCount"></strong>
            </div>
            <div class ="float-right">
                <div id="loading" class="spinner-grow text-success" role="status" >
                  <span class="visually-hidden"></span>
                </div>
            </div>
            <div class ="float-right" id="connected">
                <svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" fill="currentColor" class="bi bi-bar-chart-steps text-success" viewBox="0 0 16 16">
                    <path d="M.5 0a.5.5 0 0 1 .5.5v15a.5.5 0 0 1-1 0V.5A.5.5 0 0 1 .5 0zM2 1.5a.5.5 0 0 1 .5-.5h4a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-4a.5.5 0 0 1-.5-.5v-1zm2 4a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-7a.5.5 0 0 1-.5-.5v-1zm2 4a.5.5 0 0 1 .5-.5h6a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-6a.5.5 0 0 1-.5-.5v-1zm2 4a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-7a.5.5 0 0 1-.5-.5v-1z"/>
                </svg>    
            </div>
            

            <div class="clearfix"></div>
        </div>
    </div>
    
</div>

<div class="row">
    <div class="col-md-8 offset-2">
        <div class="form-check form-check-inline">
            <input class="form-check-input" type="radio" name="TeamGroup" value="Team A" />
            <label class="form-check-label">A Takımı</label>
        </div>
        <div class="form-check form-check-inline">
            <input class="form-check-input" type="radio" name="TeamGroup" value="Team B" />
            <label class="form-check-label">B Takımı</label>
        </div>
    </div>
    <div class="col-md-8 offset-2">
        <div class="row">
            <div class="col-md-6">
                <h4 class="text-danger text-center" name="teamHeader" >TEAM A</h4>
                <ul class = "list-group" id ="ATeamList"></ul>
            </div>
            <div class="col-md-6">
                <h4 class="text-danger text-center" name="teamHeader" >TEAM B</h4>
                <ul class = "list-group" id ="BTeamList"></ul>
            </div>
        </div>
        <ul id="namesList" class="list-group"></ul>
    </div>
</div>